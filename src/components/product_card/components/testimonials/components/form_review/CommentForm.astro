---
import RatingReview from './RatingReview.astro'
interface Props {
  productId: number
}

const { productId } = Astro.props
---

<div
  id="hs-full-screen-modal-below-sm"
  class="hs-overlay hidden w-full h-full fixed top-0 start-0 z-[60] overflow-x-hidden overflow-y-auto"
>
  <div
    class="hs-overlay-open:mt-0 hs-overlay-open:opacity-100 hs-overlay-open:duration-500 mt-10 opacity-0 transition-all max-w-full w-full sm:hs-overlay-open:mt-10 sm:mt-0 sm:max-w-lg sm:mx-auto"
  >
    <div
      class="flex flex-col bg-white sm:border sm:rounded-xl sm:shadow-sm dark:bg-gray-800 sm:dark:border-gray-700"
    >
      <div
        class="flex justify-between items-center py-3 px-4 border-b dark:border-gray-700"
      >
        <h3 class="font-bold text-gray-800 dark:text-white">Добавить отзыв</h3>
        <button
          type="button"
          id="closeBtn"
          class="flex justify-center items-center w-7 h-7 text-sm font-semibold rounded-full border border-transparent text-gray-800 hover:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none dark:text-white dark:hover:bg-gray-700 dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600"
          data-hs-overlay="#hs-full-screen-modal-below-sm"
        >
          <span class="sr-only">Close</span>
          <svg
            class="flex-shrink-0 w-4 h-4"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 6 6 18"></path>
            <path d="m6 6 12 12"></path>
          </svg>
        </button>
      </div>
      <div class="max-w-[85rem] py-4 sm:px-6 lg:px-8 lg:py-14 mx-auto">
        <div id="PopUpCard" class="mx-auto max-w-2xl">
          <!-- Card -->
          <form id="commentForm">
            <RatingReview />
            <div
              class="mt-5 sm:p-4 relative z-10 bg-white sm:border sm:rounded-xl sm:mt-10 md:p-10 dark:bg-gray-800 dark:border-gray-700"
            >
              <div class="mb-4 sm:mb-8 min-w-[19rem]">
                <label
                  for="hs-feedback-post-comment-name-1"
                  class="block mb-2 text-sm font-medium dark:text-white"
                  >Имя*
                </label>
                <input
                  type="text"
                  name="author_name"
                  id="hs-feedback-post-comment-name-1"
                  class="py-3 px-4 block w-full border border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                  placeholder="Ваше имя"
                />
              </div>
              <div class="mb-4 sm:mb-8">
                <label
                  for="hs-feedback-post-comment-email-1"
                  class="block mb-2 text-sm font-medium dark:text-white"
                  >Email*</label
                >
                <input
                  type="email"
                  name="email"
                  id="hs-feedback-post-comment-email-1"
                  class="py-3 px-4 border block w-full border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                  placeholder="Ваш email"
                />
              </div>
              <div class="mb-2 sm:mb-2">
                <label
                  for="hs-feedback-post-comment-textarea-1"
                  class="block mb-2 text-sm font-medium dark:text-white"
                >
                  Отзыв*
                </label>
                <div class="mt-1">
                  <textarea
                    id="hs-feedback-post-comment-textarea-1"
                    name="comment"
                    class="py-3 px-4 block w-full border border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                    placeholder="Напишите ваш отзыв здесь..."></textarea>
                </div>
              </div>
              <!--Accordion-->
              <div class="hs-accordion-group mb-2 sm:mb-2">
                <div
                  class="hs-accordion mb-2 sm:mb-3"
                  id="hs-basic-with-title-and-arrow-stretched-heading-three "
                >
                  <button
                    type="button"
                    class="hs-accordion-toggle hs-accordion-active:text-blue-600 py-3 inline-flex items-center justify-between gap-x-3 w-full font-semibold text-start text-gray-800 hover:text-gray-500 rounded-lg disabled:opacity-50 disabled:pointer-events-none dark:hs-accordion-active:text-blue-500 dark:text-gray-200 dark:hover:text-gray-400 dark:focus:outline-none dark:focus:text-gray-400"
                    aria-controls="hs-basic-with-title-and-arrow-stretched-collapse-three"
                  >
                    Преимущества и недостатки
                    <svg
                      class="hs-accordion-active:hidden block w-4 h-4"
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path d="m6 9 6 6 6-6"></path>
                    </svg>
                    <svg
                      class="hs-accordion-active:block hidden w-4 h-4"
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path d="m18 15-6-6-6 6"></path>
                    </svg>
                  </button>
                  <div
                    id="hs-basic-with-title-and-arrow-stretched-collapse-three"
                    class="mb-1 hs-accordion-content hidden w-full overflow-hidden transition-[height] duration-300"
                    aria-labelledby="hs-basic-with-title-and-arrow-stretched-heading-three"
                  >
                    <div class="mb-4 sm:mb-8">
                      <label
                        for="hs-feedback-post-plus"
                        class="block mb-2 text-sm font-medium dark:text-white"
                        >Преимущества
                      </label>
                      <input
                        type="text"
                        name="advantages"
                        id="hs-feedback-post-plus"
                        class="py-3 px-4 block w-full border border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                        placeholder="Опишите преимущества продукта"
                      />
                    </div>
                    <div>
                      <label
                        for="hs-feedback-post-minus"
                        class="block mb-2 text-sm font-medium dark:text-white"
                        >Недостатки
                      </label>
                      <input
                        type="text"
                        name="disadvantages"
                        id="hs-feedback-post-minus"
                        class="py-3 px-4 block w-full border border-gray-200 rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"
                        placeholder="Опишите недостатки продукта"
                      />
                    </div>
                  </div>
                </div>
              </div>

              <div class="flex items-center">
                <input
                  type="checkbox"
                  class="h-5 w-5 mt-0.5 border-gray-200 rounded text-blue-600 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-gray-800 dark:border-gray-700 dark:checked:bg-blue-500 dark:checked:border-blue-500 dark:focus:ring-offset-gray-800"
                  id="hs-checked-checkbox"
                  name="recommend"
                  checked
                />
                <label
                  for="hs-checked-checkbox"
                  class="text-gray-500 ms-3 dark:text-gray-400"
                  >Я рекомендую этот товар</label
                >
              </div>
              <input type="hidden" name="product_id" value={productId} />
              <div
                id="successMessage"
                class="text-green-600 hidden font-semibold mt-4"
              >
                Спасибо! Ваш отзыв отправлен.
                <div class="text-black">
                  Окно можно <a
                    id="closeBtn2"
                    class="cursor-pointer hover:underline text-blue-700"
                    data-hs-overlay="#hs-full-screen-modal-below-sm">закрыть.</a
                  >
                </div>
              </div><div class="font-semibold mt-4 hidden" id="errorMessage">
                <span class="text-red-600">Произошла ошибка.</span><br />
                Попробуйте отправить отзыв повторно.
              </div>
              <div class="w-90%"></div>
              <div class="mt-6 mb-6 grid" id="submitButtonContainer">
                <button
                  type="submit"
                  id="submitButton"
                  class="hiddenw-full py-3 px-4 inline-flex justify-center items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:cursor-none disabled:pointer-events-none dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600"
                  >Отправить
                </button>

                <div
                  id="spinner"
                  class="w-full hidden py-3 px-4 inline-flex justify-center items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 opacity-50 cursor-none pointer-events-none dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600"
                >
                  <div
                    class="animate-spin inline-block w-6 h-6 border-[3px] border-current border-t-transparent text-white rounded-full dark:text-white"
                    role="status"
                    aria-label="loading"
                  >
                    <span class="sr-only">Loading...</span>
                  </div>
                </div>
              </div>
            </div>
          </form>
          <!-- End Card -->
        </div>
      </div>
    </div>
  </div>
</div>

<script type="module">
  import {
    setIsClickedStar1,
    setIsClickedStar2,
    setIsClickedStar3,
    setIsClickedStar4,
    setIsClickedStar5,
  } from '../../../../../../js/constants.js'
  const form = document.getElementById('commentForm')
  const submitButton = document.getElementById('submitButton')
  const submitButtonContainer = document.getElementById('submitButtonContainer')
  const successMessage = document.getElementById('successMessage')
  const errorMessage = document.getElementById('errorMessage')
  const closeBtn1 = document.getElementById('closeBtn')
  const closeBtn2 = document.getElementById('closeBtn2')
  const spinner = document.getElementById('spinner')

  async function sendRequest(event) {
    event.preventDefault()
    const formData = new FormData(form)
    const data = {}

    formData.forEach((value, key) => {
      if (value.trim() !== '') {
        data[key] = value
      }
    })

    submitButton.classList.add('hidden')
    spinner.classList.remove('hidden')

    try {
      const response = await fetch('http://91.219.60.248/reviews', {
        method: 'POST',
        body: JSON.stringify(data),
        headers: {
          'Content-Type': 'application/json',
        },
      })

      if (!response.ok) {
        throw new Error('Ошибка при отправке данных')
      }

      const resp = await response.json()
      console.log(resp)

      if (response.ok) {
        spinner.classList.add('hidden')
        submitButton.classList.remove('hidden')
        successMessage.classList.remove('hidden')
        form.reset()
        document.getElementById('inputRating').value = ''
        setStarColor('star-1', 'text-gray-300')
        setStarColor('star-2', 'text-gray-300')
        setStarColor('star-3', 'text-gray-300')
        setStarColor('star-4', 'text-gray-300')
        setStarColor('star-5', 'text-gray-300')
      }
    } catch (error) {
      spinner.classList.add('hidden')
      submitButton.classList.remove('hidden')
      //errorMessage.classList.remove('hidden')
    }
  }

  function setStarColor(starId, colorClass) {
    const star = document.getElementById(starId)
    star.classList.add(colorClass)
    star.classList.remove('text-yellow-400')
  }

  closeBtn.addEventListener('click', () => {
    if (!successMessage.classList.contains('hidden')) {
      successMessage.classList.add('hidden')
    }
    if (!errorMessage.classList.contains('hidden')) {
      errorMessage.classList.add('hidden')
    }
    form.reset()
    document.getElementById('inputRating').value = ''
    setStarColor('star-1', 'text-gray-300')
    setStarColor('star-2', 'text-gray-300')
    setStarColor('star-3', 'text-gray-300')
    setStarColor('star-4', 'text-gray-300')
    setStarColor('star-5', 'text-gray-300')
  })

  form.addEventListener('submit', sendRequest)
  closeBtn1.addEventListener('click', () => {
    successMessage.classList.add('hidden')
    setIsClickedStar1(false)
    setIsClickedStar2(false)
    setIsClickedStar3(false)
    setIsClickedStar4(false)
    setIsClickedStar5(false)
  })
  closeBtn2.addEventListener('click', () => {
    successMessage.classList.add('hidden')
    setIsClickedStar1(false)
    setIsClickedStar2(false)
    setIsClickedStar3(false)
    setIsClickedStar4(false)
    setIsClickedStar5(false)
  })
</script>
